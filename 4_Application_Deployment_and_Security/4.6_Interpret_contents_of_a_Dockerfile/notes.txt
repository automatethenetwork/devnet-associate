The "hello-world" Dockerfile

This is the hello-world Dockerfile:

FROM scratch
    "FROM scratch" means that the new Docker image starts with a fresh, empty container. 
    It's also possible to build an image based on one that already exists. 
    To do that, change "scratch" to the name of the starting container.
COPY hello /
    Copy the local file ‘hello’ into the root of the container image. Then reason for storing Dockerfiles 
    together with related application files is so that the Dockerfile can conveniently refer to those files 
    and direct Docker to add them to a container.
CMD ["/hello"]
    Run the command "hello" when the container image starts. When someone uses docker run to execute this container image, 
    Docker automatically runs the program identified in this line.

COPY takes in a src and destination. It only lets you copy in a local file or directory from your host 
(the machine building the Docker image) into the Docker image itself.

ADD lets you do that too, but it also supports 2 other sources. First, you can use a URL instead of a local file / 
directory. Secondly, you can extract a tar file from the source directly into the destination.


#docker search ubuntu
    search for image in repo
#docker run hello-world
    run containter
#docker run -it ubuntu
    run container and open shell
#docker ps
    check running containers
#docker attach CONTAINER_ID
    tty into running container
CTRL-Q to exit without killing container
#docker build .
    build image from dockerfile in folder
#docker run -ti YOUR_IMAGE_ID
    run container from your image

FROM ubuntu
    Use ubuntu image as base
RUN apt-get update
    run command
RUN apt-get -y install python
    installs latest python
ADD hellodevnet.py /hellodevnet.py
    copies script
CMD ["/hellodevnet.py"]
    runs script

EXPOSE 8000
    Documents port being used by app, mapped wiuht dynamic port using -p
ENTRYPOINT ["python", "-m", "SimpleHTTPServer", "8000"]
    Runs python command and lets us pass arguments

#docker inspect CONTAINER_ID 
    Gives info about container including IP address

#docker stop
    Stop running container
#docker rm $(docker ps -qa)
    Remove old instance of container

#docker images
    list current images

#docker rmi YOUR_IMAGE_ID
    remove docker image


Summary from DevNet Docker Learning Lab

docker –version	This command is used to get the currently installed version of docker.
docker pull	This command is used to pull images from the docker repository(hub.docker.com).
docker run -it -d	This command is used to create a container from an image.
docker ps	This command is used to list the running containers.
docker ps -a	This command is used to show all the running and exited containers.
docker exec -it bash	This command is used to access the running container.
docker stop	This command stops a running container.
docker commit <username/imagename>	This command creates a new image of an edited container on the local system.
docker push <username/image name>	This command is used to push an image to the docker hub repository.
docker images	This command lists all the locally stored docker images.
docker rm	This command is used to delete a stopped container.
docker rmi	This command is used to delete an image from local storage.
docker build	This command is used to build an image from a specified docker file.


